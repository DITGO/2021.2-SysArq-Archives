# Generated by Django 3.2.6 on 2022-04-19 05:20

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BoxAbbreviations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=100, null=True)),
                ('abbreviation', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.IntegerField(blank=True, null=True,
                 validators=[django.core.validators.MinValueValidator(1900)])),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_number', models.CharField(max_length=20, unique=True)),
                ('notes', models.CharField(blank=True, max_length=300, null=True)),
                ('filer_user', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('temporality', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FileLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FrontCover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('box_abbreviation', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OriginBoxSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year', django.contrib.postgres.fields.ArrayField(models.IntegerField(
                    validators=[django.core.validators.MinValueValidator(1900)]))),
                ('month', django.contrib.postgres.fields.ArrayField(models.CharField(blank=True, max_length=3, null=True))),
            ],
        ),
        migrations.CreateModel(
            name='PublicWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('cpf', models.CharField(max_length=11, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Shelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Unity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unity_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('unity_abbreviation', models.CharField(blank=True, max_length=20, null=True)),
                ('administrative_bond', models.CharField(blank=True, max_length=100, null=True)),
                ('bond_abbreviation', models.CharField(blank=True, max_length=20, null=True)),
                ('municipality', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone_number', models.CharField(blank=True, max_length=11, null=True)),
                ('notes', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('document_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                 parent_link=True, primary_key=True, serialize=False, to='archives_app.document')),
                ('received_date', models.DateField()),
            ],
            bases=('archives_app.document',),
        ),
        migrations.CreateModel(
            name='OriginBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900)])),
                ('subject', models.ManyToManyField(to='archives_app.OriginBoxSubject')),
                ('rack_id', models.ForeignKey(blank=True, null=True,
                 on_delete=django.db.models.deletion.PROTECT, to='archives_app.rack')),
                ('shelf_id', models.ForeignKey(blank=True, null=True,

            ],
            bases=('archives_app.relation',),
        ),
    ]
